---
title: "Opinion di pueblo"
output: html_notebook
---

```{r}
Responses...Opinion.di.pueblo...15.October.2024 <- read.csv("C:/Users/Rendell CE/OneDrive - Cornerstone Economics/Lovely Data/Opinion di pueblo/Responses - Opinion di pueblo - 15 October 2024.csv", stringsAsFactors=TRUE)

df<-Responses...Opinion.di.pueblo...15.October.2024

colnames(df)[24:34] <- paste0("rating_", 1:11)

```

```{r}
# Load necessary libraries
library(ggplot2)
library(tidyr)
library(dplyr)

# Create a named vector for custom labels
custom_labels <- c(
  rating_1 = "Overall satisfaction",
  rating_2 = "Evelyna Wever-Croes",
  rating_3 = "Geoffrey Wever",
  rating_4 = "Ursell Arends",
  rating_5 = "Xiomara Maduro",
  rating_6 = "Rocco Tjon",
  rating_7 = "Glenbert Croes",
  rating_8 = "Dangui Oduber",
  rating_9 = "Endy Croes",
  rating_10 = "Ady Thijsen",
  rating_11 = "Overall effectiveness"
)

# Calculate means and reorder the Rating factor in ascending order
mean_order <- df_long %>%
  group_by(Rating) %>%
  summarise(mean_score = mean(Score, na.rm = TRUE)) %>%
  arrange(mean_score) %>%
  pull(Rating)

# Reorder the Rating factor in the original dataframe
df_long$Rating <- factor(df_long$Rating, levels = mean_order)

# Create the violin plot with custom labels
ggplot(df_long, aes(x = Rating, y = Score)) +
  geom_violin(trim = FALSE, fill = "lightblue") +   # Violin plot with no trimming, and custom color
  geom_jitter(width = 0.2, alpha = 0.3) +           # Add jitter to show individual data points
  stat_summary(fun = "mean", geom = "point",        # Add points for the mean
               color = "red", size = 3) +           # Customize color and size of mean points
  coord_flip() +                                    # Flip the coordinates
  theme_minimal() +                                 # Use a minimal theme
  labs(title = "Ratings",            # Title for the plot
       x = "Rating Type",                           # X-axis label (flipped)
       y = "Score") +                               # Y-axis label (flipped)
  scale_x_discrete(labels = custom_labels)          # Use custom labels for x-axis
```

